name: Deploy to Timeweb

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Setup Node.js for Backend
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Build Backend
        working-directory: ./backend
        run: npm run build

      - name: Deploy to Timeweb
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$SSH_HOST '
            mkdir -p /var/www/vmetke/public_html /var/www/vmetke/node_app
            sudo systemctl restart nginx || sudo systemctl start nginx
          '
          scp -i key.pem -r frontend/dist/* $SSH_USER@$SSH_HOST:/var/www/vmetke/public_html/
          scp -i key.pem -r backend/dist backend/prisma backend/package.json backend/package-lock.json backend/.env $SSH_USER@$SSH_HOST:/var/www/vmetke/node_app/
          ssh -i key.pem $SSH_USER@$SSH_HOST '
            cd /var/www/vmetke/node_app
            npm ci --omit=dev
            npx prisma generate
            pm2 delete vmetke-backend || true
            pm2 start dist/app.js --name vmetke-backend
            pm2 save
          '
          rm -f key.pem
